{"ast":null,"code":"var _jsxFileName = \"E:\\\\AcademicAdvisingSystem\\\\client\\\\src\\\\components\\\\Result.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport { useHistory } from \"react-router-dom\";\nimport { LoginSchema } from '../schemas/schemas';\nimport { Form, Formik, Field, ErrorMessage, FieldArray } from \"formik\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialFormData = {\n  firstName: \"\",\n  friends: []\n};\nexport default function Result() {\n  _s();\n\n  const [courses, setCourses] = useState(initialFormData);\n  useEffect(() => {\n    axios.get('/api/courses').then(x => {\n      setCourses(x.data);\n    }).catch(err => {// toast.error(err.response.data, {\n      //     position: \"top-right\",\n      //     autoClose: 5000,\n      //     hideProgressBar: false\n      // });\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-dark\",\n          children: \"Result\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Please fill in this form to set your result!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), courses && courses.length && courses.length > 0 && /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            course: '',\n            gpa: ''\n          } // validationSchema={LoginSchema}\n          ,\n          onSubmit: (values, actions) => {\n            actions.setSubmitting(false);\n          },\n          children: props => /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: props.handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(Field, {\n              className: \"form-control\",\n              name: \"course\",\n              as: \"select\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                disabled: true,\n                children: \"--Select Course--\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 41\n              }, this), courses && courses.map(x => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: x.id,\n                children: x.id\n              }, x.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 45\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Course Info\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              type: \"text\",\n              className: \"form-control\",\n              name: \"gpa\",\n              placeholder: \"GPA\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"invalid-feedback\",\n              children: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"gpa\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-dark text-white\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Result, \"+9LXJuaGTrMPw+8Cp/d8zTuXQOw=\");\n\n_c = Result;\n\nvar _c;\n\n$RefreshReg$(_c, \"Result\");","map":{"version":3,"sources":["E:/AcademicAdvisingSystem/client/src/components/Result.js"],"names":["React","useState","useEffect","axios","useHistory","LoginSchema","Form","Formik","Field","ErrorMessage","FieldArray","initialFormData","firstName","friends","Result","courses","setCourses","get","then","x","data","catch","err","length","course","gpa","values","actions","setSubmitting","props","handleSubmit","map","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from 'axios';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { LoginSchema } from '../schemas/schemas';\r\nimport { Form, Formik, Field, ErrorMessage, FieldArray } from \"formik\";\r\n\r\nconst initialFormData = { firstName: \"\", friends: [] };\r\nexport default function Result() {\r\n    const [courses, setCourses] = useState(initialFormData);\r\n\r\n    useEffect(() => {\r\n\r\n        axios.get('/api/courses',)\r\n            .then((x) => {\r\n                setCourses(x.data);\r\n            })\r\n            .catch((err) => {\r\n                // toast.error(err.response.data, {\r\n                //     position: \"top-right\",\r\n                //     autoClose: 5000,\r\n                //     hideProgressBar: false\r\n                // });\r\n\r\n            })\r\n\r\n    }, []);\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                    <h1 className=\"text-dark\">Result</h1>\r\n                    <p>Please fill in this form to set your result!</p>\r\n                    {courses && courses.length && courses.length > 0 &&\r\n                        <Formik\r\n                            initialValues={{ course: '', gpa: '' }}\r\n                            // validationSchema={LoginSchema}\r\n                            onSubmit={(values, actions) => {\r\n                                actions.setSubmitting(false);\r\n                            }}\r\n                        >\r\n                            {props => (\r\n                                <Form onSubmit={props.handleSubmit}>\r\n                                    <Field className=\"form-control\" name=\"course\" as=\"select\">\r\n                                        <option value=\"\" disabled>--Select Course--</option>\r\n                                        {courses && courses.map(x => (\r\n                                            <option value={x.id} key={x.id}>{x.id}</option>\r\n                                        ))}\r\n                                    </Field>\r\n                                    <div>\r\n                                        <h3>Course Info</h3>\r\n                                    </div>\r\n                                    <Field type=\"text\" className=\"form-control\" name=\"gpa\" placeholder=\"GPA\" />\r\n                                    <div className=\"invalid-feedback\">\r\n                                        <ErrorMessage\r\n                                            name=\"gpa\"\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <button type=\"submit\" className=\"btn btn-dark text-white\">Submit</button>\r\n                                </Form>\r\n                            )}\r\n                        </Formik>\r\n                    }\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n\r\n                </div>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}