{"ast":null,"code":"var _jsxFileName = \"E:\\\\AcademicAdvisingSystem\\\\client\\\\src\\\\components\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { LoginSchema } from '../schemas/schemas';\nimport { Form, Formik, Field, ErrorMessage, FieldArray } from \"formik\";\nimport axios from 'axios';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const history = useHistory();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid bg-green\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-12\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"signup-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-dark\",\n            children: \"Log In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Please fill in this form to login!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Formik, {\n            initialValues: {\n              username: '',\n              password: ''\n            },\n            validationSchema: LoginSchema,\n            onSubmit: (values, actions) => {\n              axios.post('/api/users/login', values).then(x => {\n                toast.success(x.data.message, {\n                  position: \"top-right\",\n                  autoClose: 5000,\n                  hideProgressBar: false\n                });\n                actions.resetForm();\n                localStorage.setItem('login', 'true');\n                localStorage.setItem('username', values.username);\n\n                if (x.data.user.role === 'admin') {\n                  history.push('/user-management');\n                }\n\n                if (x.data.user.role === 'student') {\n                  history.push('/user-management');\n                }\n              }).catch(err => {\n                toast.error(err.response.data, {\n                  position: \"top-right\",\n                  autoClose: 5000,\n                  hideProgressBar: false\n                });\n              }).finally(() => {\n                actions.setSubmitting(false);\n              });\n            },\n            children: props => /*#__PURE__*/_jsxDEV(Form, {\n              onSubmit: props.handleSubmit,\n              children: [/*#__PURE__*/_jsxDEV(Field, {\n                type: \"text\",\n                className: \"form-control\",\n                name: \"username\",\n                placeholder: \"Username\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"invalid-feedback\",\n                children: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                  name: \"username\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                type: \"password\",\n                className: \"form-control\",\n                name: \"password\",\n                placeholder: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"invalid-feedback\",\n                children: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                  name: \"password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-dark text-white\",\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["E:/AcademicAdvisingSystem/client/src/components/Login.js"],"names":["React","useHistory","LoginSchema","Form","Formik","Field","ErrorMessage","FieldArray","axios","ToastContainer","toast","Login","history","username","password","values","actions","post","then","x","success","data","message","position","autoClose","hideProgressBar","resetForm","localStorage","setItem","user","role","push","catch","err","error","response","finally","setSubmitting","props","handleSubmit"],"mappings":"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","sourcesContent":["\r\nimport React from 'react'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { LoginSchema } from '../schemas/schemas';\r\nimport { Form, Formik, Field, ErrorMessage, FieldArray } from \"formik\";\r\nimport axios from 'axios';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst Login = () => {\r\n    const history = useHistory();\r\n    return (\r\n        <div className=\"container-fluid bg-green\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12\">\r\n                    <div className=\"signup-form\">\r\n                        <h1 className=\"text-dark\">Log In</h1>\r\n                        <p>Please fill in this form to login!</p>\r\n                        <Formik\r\n                            initialValues={{ username: '', password: '' }}\r\n                            validationSchema={LoginSchema}\r\n                            onSubmit={(values, actions) => {\r\n                                axios.post('/api/users/login', values)\r\n                                    .then((x) => {\r\n                                        toast.success(x.data.message, {\r\n                                            position: \"top-right\",\r\n                                            autoClose: 5000,\r\n                                            hideProgressBar: false\r\n                                        });\r\n                                        actions.resetForm();\r\n                                        localStorage.setItem('login', 'true');\r\n                                        localStorage.setItem('username', values.username);\r\n\r\n\r\n                                        if (x.data.user.role === 'admin') {\r\n                                            history.push('/user-management');\r\n                                        }\r\n\r\n                                        if (x.data.user.role === 'student') {\r\n                                            history.push('/user-management');\r\n                                        }\r\n\r\n\r\n                                    })\r\n                                    .catch((err) => {\r\n                                        toast.error(err.response.data, {\r\n                                            position: \"top-right\",\r\n                                            autoClose: 5000,\r\n                                            hideProgressBar: false\r\n                                        });\r\n\r\n                                    })\r\n                                    .finally(() => {\r\n                                        actions.setSubmitting(false);\r\n                                    });\r\n                            }}\r\n                        >\r\n                            {props => (\r\n                                <Form onSubmit={props.handleSubmit}>\r\n                                    <Field type=\"text\" className=\"form-control\" name=\"username\" placeholder=\"Username\" />\r\n                                    <div className=\"invalid-feedback\">\r\n                                        <ErrorMessage\r\n                                            name=\"username\"\r\n                                        />\r\n                                    </div>\r\n                                    <Field type=\"password\" className=\"form-control\" name=\"password\" placeholder=\"Password\" />\r\n                                    <div className=\"invalid-feedback\">\r\n                                        <ErrorMessage\r\n                                            name=\"password\"\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <button type=\"submit\" className=\"btn btn-dark text-white\">Submit</button>\r\n                                </Form>\r\n                            )}\r\n                        </Formik>\r\n                        <ToastContainer />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;\r\n\r\n"]},"metadata":{},"sourceType":"module"}