{"ast":null,"code":"var _jsxFileName = \"E:\\\\AcademicAdvisingSystem\\\\client\\\\src\\\\components\\\\Signup.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { Formik } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Signup = () => {\n  _s();\n\n  const history = useHistory();\n\n  const handleLogin = () => {\n    localStorage.setItem('login', 'true');\n    console.log(localStorage.getItem('login'));\n    history.push('/profile');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-12\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"signup-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"My Form\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Formik, {\n            initialValues: {\n              email: '',\n              color: 'red',\n              firstName: '',\n              lastName: ''\n            },\n            onSubmit: (values, actions) => {\n              setTimeout(() => {\n                alert(JSON.stringify(values, null, 2));\n                actions.setSubmitting(false);\n              }, 1000);\n            },\n            children: props => /*#__PURE__*/_jsxDEV(Form, {\n              children: [/*#__PURE__*/_jsxDEV(Field, {\n                type: \"email\",\n                name: \"email\",\n                placeholder: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                as: \"select\",\n                name: \"color\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"red\",\n                  children: \"Red\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 32,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"green\",\n                  children: \"Green\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 33,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"blue\",\n                  children: \"Blue\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 34,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                name: \"lastName\",\n                children: ({\n                  field,\n                  // { name, value, onChange, onBlur }\n                  form: {\n                    touched,\n                    errors\n                  },\n                  // also values, setXXXX, handleXXXX, dirty, isValid, status, etc.\n                  meta\n                }) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    placeholder: \"Email\",\n                    ...field\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 44,\n                    columnNumber: 49\n                  }, this), meta.touched && meta.error && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"error\",\n                    children: meta.error\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 46,\n                    columnNumber: 53\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 43,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                name: \"lastName\",\n                placeholder: \"Doe\",\n                component: MyInput\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Signup, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n\n_c = Signup;\nexport default Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["E:/AcademicAdvisingSystem/client/src/components/Signup.js"],"names":["React","useHistory","Formik","Signup","history","handleLogin","localStorage","setItem","console","log","getItem","push","email","color","firstName","lastName","values","actions","setTimeout","alert","JSON","stringify","setSubmitting","props","field","form","touched","errors","meta","error","MyInput"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Formik } from 'formik';\r\n\r\nconst Signup = () => {\r\n    const history = useHistory();\r\n\r\n    const handleLogin = () => {\r\n        localStorage.setItem('login', 'true');\r\n        console.log(localStorage.getItem('login'))\r\n        history.push('/profile');\r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12\">\r\n                    <div className=\"signup-form\">\r\n                        <h1>My Form</h1>\r\n                        <Formik\r\n                            initialValues={{ email: '', color: 'red', firstName: '', lastName: '' }}\r\n                            onSubmit={(values, actions) => {\r\n                                setTimeout(() => {\r\n                                    alert(JSON.stringify(values, null, 2));\r\n                                    actions.setSubmitting(false);\r\n                                }, 1000);\r\n                            }}\r\n                        >\r\n                            {(props: FormikProps<any>) => (\r\n                                <Form>\r\n                                    <Field type=\"email\" name=\"email\" placeholder=\"Email\" />\r\n                                    <Field as=\"select\" name=\"color\">\r\n                                        <option value=\"red\">Red</option>\r\n                                        <option value=\"green\">Green</option>\r\n                                        <option value=\"blue\">Blue</option>\r\n                                    </Field>\r\n\r\n                                    <Field name=\"lastName\">\r\n                                        {({\r\n                                            field, // { name, value, onChange, onBlur }\r\n                                            form: { touched, errors }, // also values, setXXXX, handleXXXX, dirty, isValid, status, etc.\r\n                                            meta,\r\n                                        }) => (\r\n                                            <div>\r\n                                                <input type=\"text\" placeholder=\"Email\" {...field} />\r\n                                                {meta.touched && meta.error && (\r\n                                                    <div className=\"error\">{meta.error}</div>\r\n                                                )}\r\n                                            </div>\r\n                                        )}\r\n                                    </Field>\r\n                                    <Field name=\"lastName\" placeholder=\"Doe\" component={MyInput} />\r\n                                    <button type=\"submit\">Submit</button>\r\n                                </Form>\r\n                            )}\r\n                        </Formik>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Signup;\r\n"]},"metadata":{},"sourceType":"module"}