{"ast":null,"code":"import { string, object } from 'yup';\nimport XRegExp from 'xregexp';\nexport const SignupSchema = object().shape({\n  username: string().min(5, 'This field must be at least 5 characters long.').max(20, 'This field must be at most 20 characters long.').required('This field must not be empty.'),\n  email: string().email('This field should be a valid email address.').matches(/^.{1,64}@/, 'The part before @ of the email can be maximum 64 characters.').matches(/^.*[a-z]+.*@/, 'This field should be a valid email address.'),\n  role: string().required('This field must not be empty'),\n  password: string().min(8, 'This field must be at least 8 characters long').max(50, 'This field must be at most 50 characters long').required('This field must not be empty'),\n  confirmPassword: string().required('This field must not be empty').oneOf([ref('password'), null], 'Passwords must match')\n});","map":{"version":3,"sources":["E:/AcademicAdvisingSystem/client/src/schemas/schemas.js"],"names":["string","object","XRegExp","SignupSchema","shape","username","min","max","required","email","matches","role","password","confirmPassword","oneOf","ref"],"mappings":"AAAA,SAASA,MAAT,EAAiBC,MAAjB,QAA+B,KAA/B;AACA,OAAOC,OAAP,MAAoB,SAApB;AAEA,OAAO,MAAMC,YAAY,GAAGF,MAAM,GAAGG,KAAT,CAAe;AACvCC,EAAAA,QAAQ,EAAEL,MAAM,GACXM,GADK,CACD,CADC,EACE,gDADF,EAELC,GAFK,CAED,EAFC,EAEG,gDAFH,EAGLC,QAHK,CAGI,+BAHJ,CAD6B;AAKvCC,EAAAA,KAAK,EAAET,MAAM,GACRS,KADE,CACI,6CADJ,EAEFC,OAFE,CAEM,WAFN,EAEmB,8DAFnB,EAGFA,OAHE,CAGM,cAHN,EAGsB,6CAHtB,CALgC;AASvCC,EAAAA,IAAI,EAAEX,MAAM,GACPQ,QADC,CACQ,8BADR,CATiC;AAWvCI,EAAAA,QAAQ,EAAEZ,MAAM,GACXM,GADK,CACD,CADC,EACE,+CADF,EAELC,GAFK,CAED,EAFC,EAEG,+CAFH,EAGLC,QAHK,CAGI,8BAHJ,CAX6B;AAevCK,EAAAA,eAAe,EAAEb,MAAM,GAClBQ,QADY,CACH,8BADG,EAEZM,KAFY,CAEN,CAACC,GAAG,CAAC,UAAD,CAAJ,EAAkB,IAAlB,CAFM,EAEmB,sBAFnB;AAfsB,CAAf,CAArB","sourcesContent":["import { string, object } from 'yup';\r\nimport XRegExp from 'xregexp';\r\n\r\nexport const SignupSchema = object().shape({\r\n    username: string()\r\n        .min(5, 'This field must be at least 5 characters long.')\r\n        .max(20, 'This field must be at most 20 characters long.')\r\n        .required('This field must not be empty.'),\r\n    email: string()\r\n        .email('This field should be a valid email address.')\r\n        .matches(/^.{1,64}@/, 'The part before @ of the email can be maximum 64 characters.')\r\n        .matches(/^.*[a-z]+.*@/, 'This field should be a valid email address.'),\r\n    role: string()\r\n        .required('This field must not be empty'),\r\n    password: string()\r\n        .min(8, 'This field must be at least 8 characters long')\r\n        .max(50, 'This field must be at most 50 characters long')\r\n        .required('This field must not be empty'),\r\n    confirmPassword: string()\r\n        .required('This field must not be empty')\r\n        .oneOf([ref('password'), null], 'Passwords must match'),\r\n});"]},"metadata":{},"sourceType":"module"}